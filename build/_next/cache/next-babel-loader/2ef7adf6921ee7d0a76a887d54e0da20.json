{"ast":null,"code":"import React, { useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport Button from '../Button';\nimport Message from '../Message';\nimport TextField from '../TextField';\nimport { login } from '../../services/users';\nimport styles from './LoginForm.css';\n\nconst LoginForm = ({\n  onLoggedIn\n}) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const clearErrorMessage = () => {\n    setErrorMessage('');\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    clearErrorMessage();\n    setSubmitting(true);\n\n    try {\n      if (!validator.isEmail(email)) {\n        throw new Error('E-mail inválido');\n      }\n\n      if (password.length < 6) {\n        throw new Error('A senha deve ter pelo menos 6 caracteres');\n      }\n\n      await login({\n        email,\n        password\n      });\n      onLoggedIn();\n    } catch ({\n      message\n    }) {\n      setErrorMessage(message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onEmailChanged = ({\n    target: {\n      value\n    }\n  }) => {\n    setEmail(value);\n    clearErrorMessage();\n  };\n\n  const onPasswordChanged = ({\n    target: {\n      value\n    }\n  }) => {\n    setPassword(value);\n    clearErrorMessage();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: styles.Email,\n    value: email,\n    handleChange: onEmailChanged,\n    disabled: submitting\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Senha\",\n    className: styles.Password,\n    value: password,\n    handleChange: onPasswordChanged,\n    disabled: submitting\n  }), errorMessage && /*#__PURE__*/React.createElement(Message, {\n    type: \"error\"\n  }, errorMessage), /*#__PURE__*/React.createElement(Link, {\n    href: \"/forgot-password\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: styles.ForgotPasswordLink\n  }, \"Esqueceu sua senha?\")), /*#__PURE__*/React.createElement(Button, {\n    className: styles.SubmitButton,\n    type: \"submit\",\n    fluid: true,\n    disabled: submitting,\n    submitting: submitting\n  }, \"Entrar\"));\n};\n\nLoginForm.propTypes = {\n  onLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/lucas/dev/uerj/urban-map-site/src/components/LoginForm/LoginForm.jsx"],"names":["React","useState","Link","PropTypes","validator","Button","Message","TextField","login","styles","LoginForm","onLoggedIn","email","setEmail","password","setPassword","submitting","setSubmitting","errorMessage","setErrorMessage","clearErrorMessage","onSubmit","event","preventDefault","isEmail","Error","length","message","onEmailChanged","target","value","onPasswordChanged","Email","Password","ForgotPasswordLink","SubmitButton","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport Button from '../Button';\nimport Message from '../Message';\nimport TextField from '../TextField';\nimport { login } from '../../services/users';\nimport styles from './LoginForm.css';\n\nconst LoginForm = ({ onLoggedIn }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const clearErrorMessage = () => {\n    setErrorMessage('');\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    clearErrorMessage();\n    setSubmitting(true);\n\n    try {\n      if (!validator.isEmail(email)) {\n        throw new Error('E-mail inválido');\n      }\n\n      if (password.length < 6) {\n        throw new Error('A senha deve ter pelo menos 6 caracteres');\n      }\n\n      await login({ email, password });\n      onLoggedIn();\n    } catch ({ message }) {\n      setErrorMessage(message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onEmailChanged = ({ target: { value } }) => {\n    setEmail(value);\n    clearErrorMessage();\n  };\n\n  const onPasswordChanged = ({ target: { value } }) => {\n    setPassword(value);\n    clearErrorMessage();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextField\n        id=\"email\"\n        name=\"email\"\n        placeholder=\"E-mail\"\n        className={styles.Email}\n        value={email}\n        handleChange={onEmailChanged}\n        disabled={submitting}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Senha\"\n        className={styles.Password}\n        value={password}\n        handleChange={onPasswordChanged}\n        disabled={submitting}\n      />\n      {errorMessage && (\n        <Message type=\"error\">\n          {errorMessage}\n        </Message>\n      )}\n      <Link href=\"/forgot-password\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a className={styles.ForgotPasswordLink}>\n          Esqueceu sua senha?\n        </a>\n      </Link>\n      <Button\n        className={styles.SubmitButton}\n        type=\"submit\"\n        fluid\n        disabled={submitting}\n        submitting={submitting}\n      >\n        Entrar\n      </Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onLoggedIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}