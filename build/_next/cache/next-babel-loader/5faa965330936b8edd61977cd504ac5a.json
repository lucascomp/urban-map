{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { forceClearSession } from '../utils/auth';\nimport { get, post, put } from '../utils/request';\nimport redirect from '../utils/router';\nvar SERVICE_URBAN_MAP_API_BASE_URL = process.env.SERVICE_URBAN_MAP_API_BASE_URL;\nexport var forgotPassword = function forgotPassword(_ref) {\n  var email = _ref.email;\n  var path = '/forgot-password';\n  return post(path, {\n    email: email\n  });\n};\nexport var getUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _ref3,\n        cookie,\n        response,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref3 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, cookie = _ref3.cookie;\n            _context.next = 3;\n            return get('/user', {\n              cookie: cookie\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getUser() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var login = function login(_ref4) {\n  var email = _ref4.email,\n      password = _ref4.password;\n  var path = '/login';\n  return post(path, {\n    email: email,\n    password: password\n  });\n};\n\nvar loginWithProvider = function loginWithProvider(_ref5) {\n  var provider = _ref5.provider;\n  redirect(\"\".concat(SERVICE_URBAN_MAP_API_BASE_URL, \"/login/\").concat(provider));\n};\n\nexport var loginWithFacebook = function loginWithFacebook() {\n  var provider = 'facebook';\n  loginWithProvider({\n    provider: provider\n  });\n};\nexport var loginWithGoogle = function loginWithGoogle() {\n  var provider = 'google';\n  loginWithProvider({\n    provider: provider\n  });\n};\nexport var logout = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _ref7,\n        cookie,\n        path,\n        res,\n        message,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref7 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, cookie = _ref7.cookie;\n            path = '/logout';\n            _context2.prev = 2;\n            _context2.next = 5;\n            return get(path, {\n              cookie: cookie\n            });\n\n          case 5:\n            res = _context2.sent;\n\n            if (res.ok) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 9;\n            return res.text();\n\n          case 9:\n            message = _context2.sent;\n            throw new Error(message);\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](2);\n            forceClearSession();\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 13]]);\n  }));\n\n  return function logout() {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var registerAdmin = function registerAdmin(_ref8) {\n  var email = _ref8.email,\n      firstName = _ref8.firstName,\n      lastName = _ref8.lastName,\n      password = _ref8.password;\n  return post('/register-admin', {\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    password: password\n  });\n};\nexport var resetPassword = function resetPassword(_ref9) {\n  var token = _ref9.token,\n      password = _ref9.password;\n  var path = '/reset-password';\n  return post(path, {\n    token: token,\n    password: password\n  });\n};\nexport var signup = function signup(_ref10) {\n  var firstName = _ref10.firstName,\n      lastName = _ref10.lastName,\n      email = _ref10.email,\n      password = _ref10.password;\n  var path = '/signup';\n  return put(path, {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    password: password\n  });\n};","map":{"version":3,"sources":["/home/lucas/dev/uerj/urban-map-site/src/services/users.js"],"names":["forceClearSession","get","post","put","redirect","SERVICE_URBAN_MAP_API_BASE_URL","process","env","forgotPassword","email","path","getUser","cookie","response","json","login","password","loginWithProvider","provider","loginWithFacebook","loginWithGoogle","logout","res","ok","text","message","Error","registerAdmin","firstName","lastName","resetPassword","token","signup"],"mappings":"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","sourcesContent":["import { forceClearSession } from '../utils/auth';\nimport { get, post, put } from '../utils/request';\nimport redirect from '../utils/router';\n\nconst { SERVICE_URBAN_MAP_API_BASE_URL } = process.env;\n\nexport const forgotPassword = ({ email }) => {\n  const path = '/forgot-password';\n\n  return post(path, { email });\n};\n\nexport const getUser = async ({ cookie } = {}) => {\n  const response = await get('/user', { cookie });\n\n  return response.json();\n};\n\nexport const login = ({ email, password }) => {\n  const path = '/login';\n\n  return post(path, { email, password });\n};\n\nconst loginWithProvider = ({ provider }) => {\n  redirect(`${SERVICE_URBAN_MAP_API_BASE_URL}/login/${provider}`);\n};\n\nexport const loginWithFacebook = () => {\n  const provider = 'facebook';\n\n  loginWithProvider({ provider });\n};\n\nexport const loginWithGoogle = () => {\n  const provider = 'google';\n\n  loginWithProvider({ provider });\n};\n\nexport const logout = async ({ cookie } = {}) => {\n  const path = '/logout';\n\n  try {\n    const res = await get(path, { cookie });\n\n    if (!res.ok) {\n      const message = await res.text();\n      throw new Error(message);\n    }\n  } catch (error) {\n    forceClearSession();\n  }\n};\n\nexport const registerAdmin = ({\n  email,\n  firstName,\n  lastName,\n  password,\n}) => post('/register-admin', {\n  email,\n  firstName,\n  lastName,\n  password,\n});\n\nexport const resetPassword = ({ token, password }) => {\n  const path = '/reset-password';\n\n  return post(path, {\n    token,\n    password,\n  });\n};\n\nexport const signup = ({\n  firstName,\n  lastName,\n  email,\n  password,\n}) => {\n  const path = '/signup';\n\n  return put(path, {\n    firstName,\n    lastName,\n    email,\n    password,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}