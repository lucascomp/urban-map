{"ast":null,"code":"import React from 'react';\nimport { getAuth } from '../../utils/auth';\nimport redirect from '../../utils/router';\nexport default function asPublicOnly({\n  pathToRedirect = '/home'\n} = {}) {\n  return Component => {\n    function PublicOnlyComponent(props) {\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return /*#__PURE__*/React.createElement(Component, props);\n    }\n\n    PublicOnlyComponent.getInitialProps = async ctx => {\n      const {\n        isLoggedIn\n      } = getAuth(ctx);\n\n      if (isLoggedIn) {\n        redirect(pathToRedirect, ctx);\n        return {};\n      }\n\n      return Component.getInitialProps ? Component.getInitialProps(ctx) : {};\n    };\n\n    return PublicOnlyComponent;\n  };\n}","map":{"version":3,"sources":["/home/lucas/dev/uerj/urban-map-site/src/components/Auth/asPublicOnly.jsx"],"names":["React","getAuth","redirect","asPublicOnly","pathToRedirect","Component","PublicOnlyComponent","props","getInitialProps","ctx","isLoggedIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,cAAc,GAAG;AAAnB,IAA+B,EAArD,EAAyD;AACtE,SAAQC,SAAD,IAAe;AACpB,aAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC;AACA,0BAAO,oBAAC,SAAD,EAAeA,KAAf,CAAP;AACD;;AAEDD,IAAAA,mBAAmB,CAACE,eAApB,GAAsC,MAAOC,GAAP,IAAe;AACnD,YAAM;AAAEC,QAAAA;AAAF,UAAiBT,OAAO,CAACQ,GAAD,CAA9B;;AAEA,UAAIC,UAAJ,EAAgB;AACdR,QAAAA,QAAQ,CAACE,cAAD,EAAiBK,GAAjB,CAAR;AAEA,eAAO,EAAP;AACD;;AAED,aAAOJ,SAAS,CAACG,eAAV,GAA4BH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAA5B,GAA6D,EAApE;AACD,KAVD;;AAYA,WAAOH,mBAAP;AACD,GAnBD;AAoBD","sourcesContent":["import React from 'react';\nimport { getAuth } from '../../utils/auth';\nimport redirect from '../../utils/router';\n\nexport default function asPublicOnly({ pathToRedirect = '/home' } = {}) {\n  return (Component) => {\n    function PublicOnlyComponent(props) {\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return <Component {...props} />;\n    }\n\n    PublicOnlyComponent.getInitialProps = async (ctx) => {\n      const { isLoggedIn } = getAuth(ctx);\n\n      if (isLoggedIn) {\n        redirect(pathToRedirect, ctx);\n\n        return {};\n      }\n\n      return Component.getInitialProps ? Component.getInitialProps(ctx) : {};\n    };\n\n    return PublicOnlyComponent;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}