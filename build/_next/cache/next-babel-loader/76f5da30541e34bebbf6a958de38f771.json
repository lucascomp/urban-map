{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport Button from '../Button';\nimport Message from '../Message';\nimport TextField from '../TextField';\nimport { login } from '../../services/users';\nimport styles from './LoginForm.css';\n\nvar LoginForm = function LoginForm(_ref) {\n  var onLoggedIn = _ref.onLoggedIn;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submitting = _useState6[0],\n      setSubmitting = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var clearErrorMessage = function clearErrorMessage() {\n    setErrorMessage('');\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var message;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              clearErrorMessage();\n              setSubmitting(true);\n              _context.prev = 3;\n\n              if (validator.isEmail(email)) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error('E-mail inválido');\n\n            case 6:\n              if (!(password.length < 6)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error('A senha deve ter pelo menos 6 caracteres');\n\n            case 8:\n              _context.next = 10;\n              return login({\n                email: email,\n                password: password\n              });\n\n            case 10:\n              onLoggedIn();\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              message = _context.t0.message;\n              setErrorMessage(message);\n\n            case 17:\n              _context.prev = 17;\n              setSubmitting(false);\n              return _context.finish(17);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 13, 17, 20]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onEmailChanged = function onEmailChanged(_ref4) {\n    var value = _ref4.target.value;\n    setEmail(value);\n    clearErrorMessage();\n  };\n\n  var onPasswordChanged = function onPasswordChanged(_ref5) {\n    var value = _ref5.target.value;\n    setPassword(value);\n    clearErrorMessage();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\",\n    className: styles.Email,\n    value: email,\n    handleChange: onEmailChanged,\n    disabled: submitting\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Senha\",\n    className: styles.Password,\n    value: password,\n    handleChange: onPasswordChanged,\n    disabled: submitting\n  }), errorMessage && /*#__PURE__*/React.createElement(Message, {\n    type: \"error\"\n  }, errorMessage), /*#__PURE__*/React.createElement(Link, {\n    href: \"/forgot-password\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: styles.ForgotPasswordLink\n  }, \"Esqueceu sua senha?\")), /*#__PURE__*/React.createElement(Button, {\n    className: styles.SubmitButton,\n    type: \"submit\",\n    fluid: true,\n    disabled: submitting,\n    submitting: submitting\n  }, \"Entrar\"));\n};\n\nLoginForm.propTypes = {\n  onLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/lucas/dev/uerj/urban-map-site/src/components/LoginForm/LoginForm.jsx"],"names":["React","useState","Link","PropTypes","validator","Button","Message","TextField","login","styles","LoginForm","onLoggedIn","email","setEmail","password","setPassword","submitting","setSubmitting","errorMessage","setErrorMessage","clearErrorMessage","onSubmit","event","preventDefault","isEmail","Error","length","message","onEmailChanged","value","target","onPasswordChanged","Email","Password","ForgotPasswordLink","SubmitButton","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACVV,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MAC7BW,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAEJZ,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAE7Ba,QAF6B;AAAA,MAEnBC,WAFmB;;AAAA,mBAGAd,QAAQ,CAAC,KAAD,CAHR;AAAA;AAAA,MAG7Be,UAH6B;AAAA,MAGjBC,aAHiB;;AAAA,mBAIIhB,QAAQ,CAAC,EAAD,CAJZ;AAAA;AAAA,MAI7BiB,YAJ6B;AAAA,MAIfC,eAJe;;AAMpC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAFD;;AAIA,MAAME,QAAQ;AAAA,yEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,KAAK,CAACC,cAAN;AACAH,cAAAA,iBAAiB;AACjBH,cAAAA,aAAa,CAAC,IAAD,CAAb;AAHe;;AAAA,kBAMRb,SAAS,CAACoB,OAAV,CAAkBZ,KAAlB,CANQ;AAAA;AAAA;AAAA;;AAAA,oBAOL,IAAIa,KAAJ,CAAU,iBAAV,CAPK;;AAAA;AAAA,oBAUTX,QAAQ,CAACY,MAAT,GAAkB,CAVT;AAAA;AAAA;AAAA;;AAAA,oBAWL,IAAID,KAAJ,CAAU,0CAAV,CAXK;;AAAA;AAAA;AAAA,qBAcPjB,KAAK,CAAC;AAAEI,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,QAAQ,EAARA;AAAT,eAAD,CAdE;;AAAA;AAebH,cAAAA,UAAU;AAfG;AAAA;;AAAA;AAAA;AAAA;AAgBJgB,cAAAA,OAhBI,eAgBJA,OAhBI;AAiBbR,cAAAA,eAAe,CAACQ,OAAD,CAAf;;AAjBa;AAAA;AAmBbV,cAAAA,aAAa,CAAC,KAAD,CAAb;AAnBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARI,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAuBA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,QAA2B;AAAA,QAAdC,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AAChDhB,IAAAA,QAAQ,CAACgB,KAAD,CAAR;AACAT,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,QAA2B;AAAA,QAAdF,KAAc,SAAxBC,MAAwB,CAAdD,KAAc;AACnDd,IAAAA,WAAW,CAACc,KAAD,CAAX;AACAT,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAEC;AAAhB,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,SAAS,EAAEZ,MAAM,CAACuB,KAJpB;AAKE,IAAA,KAAK,EAAEpB,KALT;AAME,IAAA,YAAY,EAAEgB,cANhB;AAOE,IAAA,QAAQ,EAAEZ;AAPZ,IADF,eAUE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,SAAS,EAAEP,MAAM,CAACwB,QALpB;AAME,IAAA,KAAK,EAAEnB,QANT;AAOE,IAAA,YAAY,EAAEiB,iBAPhB;AAQE,IAAA,QAAQ,EAAEf;AARZ,IAVF,EAoBGE,YAAY,iBACX,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC;AAAd,KACGA,YADH,CArBJ,eAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,kBAEE;AAAG,IAAA,SAAS,EAAET,MAAM,CAACyB;AAArB,2BAFF,CAzBF,eA+BE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,YADpB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,QAAQ,EAAEnB,UAJZ;AAKE,IAAA,UAAU,EAAEA;AALd,cA/BF,CADF;AA2CD,CAtFD;;AAwFAN,SAAS,CAAC0B,SAAV,GAAsB;AACpBzB,EAAAA,UAAU,EAAER,SAAS,CAACkC,IAAV,CAAeC;AADP,CAAtB;AAIA,eAAe5B,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport Button from '../Button';\nimport Message from '../Message';\nimport TextField from '../TextField';\nimport { login } from '../../services/users';\nimport styles from './LoginForm.css';\n\nconst LoginForm = ({ onLoggedIn }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const clearErrorMessage = () => {\n    setErrorMessage('');\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    clearErrorMessage();\n    setSubmitting(true);\n\n    try {\n      if (!validator.isEmail(email)) {\n        throw new Error('E-mail inválido');\n      }\n\n      if (password.length < 6) {\n        throw new Error('A senha deve ter pelo menos 6 caracteres');\n      }\n\n      await login({ email, password });\n      onLoggedIn();\n    } catch ({ message }) {\n      setErrorMessage(message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const onEmailChanged = ({ target: { value } }) => {\n    setEmail(value);\n    clearErrorMessage();\n  };\n\n  const onPasswordChanged = ({ target: { value } }) => {\n    setPassword(value);\n    clearErrorMessage();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextField\n        id=\"email\"\n        name=\"email\"\n        placeholder=\"E-mail\"\n        className={styles.Email}\n        value={email}\n        handleChange={onEmailChanged}\n        disabled={submitting}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Senha\"\n        className={styles.Password}\n        value={password}\n        handleChange={onPasswordChanged}\n        disabled={submitting}\n      />\n      {errorMessage && (\n        <Message type=\"error\">\n          {errorMessage}\n        </Message>\n      )}\n      <Link href=\"/forgot-password\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a className={styles.ForgotPasswordLink}>\n          Esqueceu sua senha?\n        </a>\n      </Link>\n      <Button\n        className={styles.SubmitButton}\n        type=\"submit\"\n        fluid\n        disabled={submitting}\n        submitting={submitting}\n      >\n        Entrar\n      </Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onLoggedIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}